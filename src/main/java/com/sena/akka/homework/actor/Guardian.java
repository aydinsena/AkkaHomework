package com.sena.akka.homework.actor;

import akka.actor.typed.ActorRef;
import akka.actor.typed.Behavior;
import akka.actor.typed.javadsl.AbstractBehavior;
import akka.actor.typed.javadsl.ActorContext;
import akka.actor.typed.javadsl.Behaviors;
import akka.actor.typed.javadsl.Receive;

import java.util.ArrayList;
import java.util.List;

public class Guardian extends AbstractBehavior<Guardian.Start> {

public static final class CsvEntry {
    public final Integer id;
    public final String name;
    public final String passwordHash;
    public final String gene;

    public CsvEntry(Integer id, String name, String passwordHash, String gene) {
        this.id = id;
        this.name = name;
        this.passwordHash = passwordHash;
        this.gene = gene;
    }
}
    //I guess PasswordMain receives CSV from AkkaStart?
    public static class Start {
        public final String name;

        public Start(String name) {
            this.name = name;
        }
    }

    private ActorRef<PasswordCrackingMaster.Command> passwordCrackingMaster;

    public static Behavior<Start> create() {
        return Behaviors.setup(Guardian::new);
    }
    private Guardian(ActorContext<Start> context) {
        super(context);
    }

    @Override
    public Receive<Start> createReceive() {
        return newReceiveBuilder()
                .onMessage(Start.class, this::onStart)
                .build();
    }

    //This is executed when start message is received: passwordCrackingMaster is created in this case
    private Behavior<Start> onStart(Start command) {
        //TODO: read CSV
        List<CsvEntry> csvEntries = new ArrayList<>();
        csvEntries.add(new CsvEntry(
                1,
                "Sophia",
                "7c3c58cdfb7dbc141c28cba84d4d07ff67b936e913080142eed1c6f5bcb6c43f",
                "GGUCUCGAAGGGUGAACAAGCGACCUCAGAUCGUUGGCCUUCACCCGCACAGCGGUUGCCGCGUAUAAGGGGUAGGGAUACAUUUACCUGCAACUGACCCUGUCACAUCUAGUCCCUUGUUCUGCUGCCGCGCAAUUGUUCAUCGUUACGAUUAGUGGAGGACCUAACCUCAGCUGUCUGUUGGGUGAUAACUGUUUGGAGUCUUCUGCGACCCCCGGAACCGUGUCUCUCCGUCAGCGCUUCCCCAAUGUCCGGCAACCGUAGCUCGUCCCAAGUCUUUUGAGACAUAUAUCGAUGGCCAGCACCCGAAUCCUGUCCAGGGGGAUAGCAAGUUCUUCUUGGCAACAGAGCAAGAAUUGGACAUAUUGCCAUAAACAUUACCCGACUAACCCAGCAGCGAGUCAAAAGAGCGUAGUCCCUAUACGCCCCCGGCUGCAUUUAGUCGGAGAACAUCAGAUAAAAACGCCGUUUGACACGUAUAAGUCCCGCUCACUAUAUAUAGUCGGCAUAGAGUAUCGGUAUCUGCGGUAUGAGGUGAAACCUUCUUAGAGACAGCGACGUUUUGAUUAUGGGAUGCUGAUCACGAGAGUGUCACGGAAUGUACUCCUCCAAGGCCGCGUUAGAGUGCGGACGUAUGUACUAUGAUCAAUUAGGGCCAUGCAUUCACAAUUCUAACUCGGCGUGGGGCGGUAACUCAAGCCUGCCUAGCUCUACGUUACGUAGUCGUCGCUUGAUGGGUGACCUAAGACAGGGUGGAGAGAAAAUCGAUGCUACUAAGUACGAAUAGAAGGGAGGUGUCGGUAGGUACGUUGAACGGUACCGCUUUGAUUUUUUAACUUUAUCGUAUCUCCUGCUUGUUUAAAGCGCAAGUGGAGGUUUUGGGAUGAUUAGAAAGUAGUUCAUAUGUCUUAAAGUCGAGCGUCCCCAGGCGUAUGCCUAUAACCGCAGCUAAUCUGCAUUCACUGGCGGUACCCUUUCGGGUUCGUUUUAGGUCGAUCCAAGUACUAAACGAGUUGCGAUAUGAGUUGUUUAGAGAAAAGUGGUCGUACAAUACAAAUUAUCCUUUCCCUCACAAUGUCUAGGUUUAUCCACGCCUAACUCUAGUCCCAGCUUGUUCGUCUUGUAAUGAAGCUGACAGCGAACUCUCCAGCAAUUUUUUCACCCAAUCCUGAAUUAGAGACCGACCAGGCGGGAGGCUACAUCUGGAUGUCUAAGGGCCUGAGGACGCCUAUUCGCUUAUGUCUCUUACUCCGUGUUCGUUGCCCAUUAUGAUCUUGCCAUAUUCAUGCUCACCGCAUUGCCAACGGCCGGUUAACCGCCGAAGGUUGCGGGGCCAACCGCGCUGAUGAGUUUAUUAUACGCUUCCCACCCGCCCUCCGGCAGUCGACUCCUGACCUUCUGUCUAUCGCUGCAGCACGACGCUGCAUAUUGGAACACUCGCCCGCAGAGGAGAGUUGCUUGCCUCUUGCAAAAUGAAAGUGGCAGAGGCGCGUUGAUUAAACGCAGCUAUUGGAUGAAAACGUCUACUUAUCGUCCUUGAUCGGGAUGAGGCUCACGACAACUGACCCCGUGUGAAGCUAAUAUCCGUGGAGGUUCAGACCGGCUGCUCCAAAUGAACUCCUUACGAGCUGGGGUUAUCAUAAUUACGCACUUGACCGAUAGACUCUGCGGAAUGCACGAUUAUCUGCGAGCCGAGUGCCCUUUUUCUGGGUAGCGAUCACUCGCACACGUCCACCCUAAAAGCUCAGUCGACUUGGCACUAGCCUUGGCAACAGAGUCAUAGGUAUAUAUGUACUUUUAUCUCUCAGCCUGAAAAAACCAGGAGACGUGUAAAUAGUGUAGUUCUACUCUGGACGGAACCUUUUUCGACAGUGCCUCAAAACCUAUUGACAAUUUGAUCCAUUGGACGGACCGGGUGCCGGCUGCGCCGCGCUGAUGUUAAUGCCCGAACACACGCACAAUACACGCCUGCUAGGGCACCCUAAAGAACAUCAGCAGAACGAUCGUGGGUUGCCCAUACGGACGACCCCGCACGUAACAAAGACACUAUCUACGUCCGAAGAGGAGUGAUAAUUUGCAUUACCUAAAGCCCGUGAAGCUUUAUAGAAUCCUUGUUUGGCCGUACCCCCGAGCUCUACGCCCCAAUAAUACAAUGUGGUACUAUAUUAGUGUUUCGCUGGAGUGAGCCUAGCCCAAACCCGUUUAGGAGCACUUAUUGGGCCUUAGUACGCUACUAGUAAUGAUAGCUAUGGCAGGAAAGGUACGACAAAAUGUACAGUCAUUAGAGCCGAGCUUCCCGUGGGCUGACUGGCGCCCUAGUUGAUCACAGUAGCGCUUGCCACCCUAGCAAGUCAAUGCUGGUCAAGGAGAGUCUUCGGGCCCGAUCAACCGGUUGAGAUCCACAGACAUCUAAACAUGGUUUGUGUACUGGCCUACUCGGGUUACGAAGUCACGGGCAUUACAUAAUUGUAGAGGGCUUGACUAGGCCAAUGAUAUCGAAUUUUUAGAUGUCCUGAGCCCCCGAGAGACAACACUCCUAGCGAUUGACGCUCUUCAGUCGCAAUUGAGACCACCCUGACAAAACCUCGCCCCGGCCCCGGAGUUCAUGACGCUCACAGUUGUCGACAGCUCUUACGAAACACCGAUCCGUUGAGCUACUCAGAGGCCACGGCGACGCACCGAGACAGCCAGACUUGAAUACACAGUCGAAGGAUAUUUCCAGUGUAUUAGGAUUGCUACGCUUCGUUCUAAAGCAUUGUUCUAGUUCUCCAAGGGAACGAGGGCAAAAAUACGGGGGGAAUUGACCUUCGGGCAGAUGAUGCGCCUCCUGGACGGUAAUGUUGAUGGAGCCAAUUAUCACUGAGCAAGCACACACUUUUUCUACUUUGUUUGAAAUCAGCUAGGAGACAUCCUAACCUGACUGCCAGAGACUCAGAGUCUGUUUGAGCAAGCCACGAGGUUGUGCACAAGUCAAGCUUACGCAAUUCCUGUGUCGCCGCA"
        ));

        csvEntries.add(new CsvEntry(
                2,
                "Jackson",
                "9ad8a9a2f51c5621bd1432d8f6dc33bf0cfa91889033d0a6f4d3f020d7c01037",
                "CGGGGGGAGAGAAAACUUUCAACUCCUAUACACCUAUGCUUCCUUAUCGUAACUGAUGCUCGCAGGUGUUUGUGAUCCGAACGAUAGACCUGGAUUUUGCCGGUCAUGACAAUCCCCAUACUGAACAGUUUCCACAAGUUACAGCAUGUCCCGUUUUGUCUAUGCGAGGGGGUUGUGAAUCAAUGUUAGUAGGAGUACGGAGACAUACUCAUUUCAACCAUUUGCGGUGCUUCAUCGAAUAGAUACAUGUCACCAAACUAUGUUCCGAGGGCGUCAGACACAGCCUGCUCGUUCGCGUAAAAGGGCGACCGGGAUCUUAACAUACGUUUACUGACAAAGCGAACCGCUACGUGGCAACUCUUAGAGUUUAGCAUUGACCAACGCAGUCAUGUUAGCGUAAAAACCUAGCUAACUGCAGAGUCGCAGUAGUACCAAAGCGCUCCAAUUCGCAAAUCUACUACGGGCGUCUUGGACGUCAUUGGAUCUGGCCCUAAGUAUCCGCAAGUUAAACAACAAAAUGCAAGAAGCUUACUACCGUCGACGGUUCAACUUUGUUCACCAAGCUAGUUGAACUGAUGCUCACAAUCGCAUCAGCAGGUGACAAGAUAAAUUCGAGGUUCCUUGUAUGACUGCGAAAGUCGUCAUAAUCACGAUAUAUUCUGACUAUCGACUGUCUGCGAACCCUAGAUACCUGAACCGGAAUGAUGCGUUGUAGAAUCUUCGUUGGUAACGGAAUGGCUUGGGAUCCAUUAUAAGAGCUAAUCGUGUACGAUUUCACAGCUCCAUCCCGCCGGUCCACUGACUAUCCCCACAAUAUAAUGCCAUACAAGGACGCCGGAGCUAGCCAUGAGGCCAGUGUGUGAUCGGGAGCGCGAGAAGACGCAUCUCUGCCAUUUGUUUUCUUCGAAUGAUCACGAUAAGUAUGAUUCUCCAACCGAUAAAUAUUACGCAAUACACAUGCGCCUAUUGUGUCACCGUAGCCUAACUUCCUCACUGCCACGUUAUAGAGUUCUAAAGGAGUUUCUUCGGUCUGGAUUGGAACUUCACCAGUUUCCUGACGCGCCAGGAUCUUUACUCACCUGCCACUGCUUCUGGGUUCUACACGCGCCAGUCGCCAGAGCAACACUUGGGUUCAGAAGGAUGCAUUUAGGUUAGCCCGCAGGACCGCCCCUUCCAAGCUUCCGAACCGCUUCACGAACUGUUGGGUUACCUAACAUGAUUACCAAUGCUUUAGGUUGCCGCCAUUUCCAACUUCUUAGCAUCUAAUCGAGCCGUUAUGGACAGUUCAAUUGACGUGUACCUGCUCAGUGCCUCCAUGCUUCACACGUCCUGGUACCCCUGUCCACUAUAGGGGUGUGGAUCAUGAAGGUCGUGGAGCACCCCUCUUUCCUCUGACCUUAAUACAAAGCAAUACCAAUAAGGGCUCCCCGUCAAUAUACCCGUUCGACACGAUGGUGUAAGACAGCGGAGGUUUGGUACAGCUAAAUGUUGAGCAUAACUCCAACGGUAGUUACAGUAUGAGCUAGCAACAGUCACGAGUAUCUACACUGCUUGGCUCUAGACCCACUUAAACGCACGGGACAUGCGUCUUGACUAUUUCCGUGUAUCUCUGGACAAUAUUCUCCGACAUACUGUCGUUCGAAAGUGGCGAGGCAAAGGAAUCUUUUCCUUCACCGCAAGUGGGUACGGUCAACAGGCUACGCGCAUUGAUUCAAACCAACAACAUUUCCAGCACUGAUACCACUCCACGGGAGCCCGUUGCCGCCUGAGGAAUGUAUGUAUGCCAUCGAGCAGCGUCAGCACUAUUCCGAAGUCGCUCGUGGAAUAUCACCCCGGCUGAGAUAAAGCCUUCGGGCCGCGGGAUCUGGCCAGAGAUCCCUUGACUGUCCUAUGAAUUGACCUUGAAGGCGAUUAACAUCUGCGCAAGGCAUAGCGCGUAUGACGAACCUACGGACCAGGCACACAGCGAUCUAUUGAAUCUCGGCAUAGGUGGGGGUUGUCUACGCCUAGUUUUAAGGCGGCUUCUGGCUCACUGAUCCUGCGUCUCCCCAUACGUUAGAUCUCAACUCGGAGUAAUAUGAAAUCGGCAUUGCGGCACACAGCGAGAAUAGACGGUUGGUGUUAAGAAAGUUCAAUUGUGAGCACGUUUCACAUUCCUACAUUUCCAGAUAUACCAUACUCCUCUUUCUGUCCCGAUCCCUGAACCUAAAACCUAUCGUGACCGGGCCAGAGGUAUAUAAGCGCGAAUGUUCAUAAUUGUCAGCAUCGUAUUCCCUACCAACAUAAGCGUGGAUGUAAAAAGUAUUCAGAACACAGGUUUGGUAACGGUGCAAAACACCUCGCAGCCCUAGAAUCCCCUCAAAGGCUUCAUCGUGUUAAUUCUCGUCAACCUGGAGGCCCUCAAAAAGGAAAGACCGGAAGACCACCUAAUCGAAUAUUGGACACAUUCUUCGUGGAAUCCGAUGGCGGUCAUCAGUGUUGUUCCUGGCUCGGGUGACCCCUUGGAUCCAGGCCGCUGGAAUGCUAGGCGGGAUAUAUAGUUAAGCCUCCGGCCUUGGAUCAAUCCUAAAUGGGUGUAGCCGUUGUAGUCACGCUGAACAGAUGAUGUACUGACGUUAACCAACUGAUCUAAGCGGGCUGUGGCGACAUAUAAAAGGACUGUGUAGAUCAAAGCUCUGGCCCCGAUAGCAGGUGCGCCGACUAGGCCUUCGGGUGAGACGAGAGGCAGCUUAGUGGCUAGCGUACGGUUUCGAAGUUAGGUUGAUAAUCCGACACCGGACCUCGAACGUCGUAUGAACGAGGAUCAUGUGUUUAUCCGAAUUUUCAAACUUUAUUACCGAGCCAGAGAGCUUUGAUUGUUGUAAUAAGAGGUCUAAUUCACAUGUGAACGGUUGAUCCGAAAAGUGGGCCGUGAGUCCCGCGAAAGGUGAGCGUGUUCGGCUCCAGCGACUCCGAGAUAAAAGUUUACUGUUGUGGGACGUCGAUAACGAUACGCCCUGU"
        ));

        //#create-actors
        passwordCrackingMaster =
                getContext().spawn(PasswordCrackingMaster.create(), "passwordCrackingMaster");
        //after creating master, sends the csv input to master
        passwordCrackingMaster.tell(new PasswordCrackingMaster.CsvHashInput(csvEntries));
        return this;
    }
}
